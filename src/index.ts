#!/usr/bin/env node

/**
 * Application Entry Point
 */

import * as dotenv from 'dotenv';
import * as path from 'path';
import { readFileSync, writeFileSync } from 'fs';

const init = (inFilePath: string, outFilePath: string) => {
  const absolutePath = path.resolve(process.cwd(), inFilePath);

  let config;
  try {
    config = dotenv.parse(readFileSync(absolutePath));
  } catch (err) {
    throw new Error(`Cannot read dotenv file at ${absolutePath}`);
  }

  const absoluteOutPath = path.resolve(process.cwd(), outFilePath);

  try {
    const template = `
/**
 * This is an autogenerated file.
 * Please do not change the types by hand here.
 * They will be overwritten.
 *
 * File generated by types-from-env
 */

export const EnvVarNames = ${JSON.stringify(Object.keys(config))} as const;
export type EnvVarKey = typeof EnvVarNames[number];
`;

    writeFileSync(outFilePath, template, { encoding: 'utf8' });
  } catch (err) {
    throw new Error(`Cannot write types file to ${absoluteOutPath}`);
  }
};

init(process.argv[2], process.argv[3]);
